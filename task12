Step1: add dependencies
dependencies {
  val room_version = "2.8.2"
    implementation("androidx.room:room-runtime:$room_version")
implementation("androidx.room:room-ktx:${room_version}")
kapt("androidx.room:room-compiler:$room_version")
}
plugins{
kotlin("kapt")
}
Step2 : Create a data class file User.kt
User.kt
package com.example.csee

import androidx.room.Entity
import androidx.room.PrimaryKey
@Entity(tableName = "cseeusers")
data class User(
    @PrimaryKey(autoGenerate = true)
    val uid:Int=0,
    val username:String,
    val userPhone:String
)
Step3: create a new interface file userDAO.kt
UserDAO.kt 
package com.example.csee
import androidx.room.Dao
import androidx.room.Insert
@Dao
interface userDAO {
    @Insert
    suspend fun insert(user:User)
}
Step3: create a new kotlin file userDatabase.kt
userDatabase.kt
package com.example.csee
import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase
@Database(entities = [User::class], version = 1)
abstract class UserDatabase: RoomDatabase(){
    abstract fun UserDAO():userDAO
    companion object{
        @Volatile
        private var INSTANCE: UserDatabase ?=null
        fun getInstance(context: Context):UserDatabase{
            return INSTANCE?:synchronized(this){
                val instance = Room.databaseBuilder(
                    context.applicationContext,
                    UserDatabase::class.java,
                    "rithika_db"
                ).build()
                INSTANCE=instance
                instance
            }
        }
    }
   
}
Step 4: MainActivity.kt
package com.example.csee
import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.wrapContentSize
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.room.util.TableInfo
import com.example.csee.ui.theme.CseeTheme
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
         val database= UserDatabase.getInstance(this)
            InsertRecord(database)
        }
    }
}
@Composable
fun InsertRecord(database: UserDatabase){
    var name by remember { mutableStateOf("") }
    var phonenum by remember { mutableStateOf("") }
    var context= LocalContext.current
    val userdao=database.UserDAO()
    val scope =rememberCoroutineScope()
    Column(modifier = Modifier.fillMaxSize().wrapContentSize(Alignment.Center)) {
        Text("Enter your details", fontSize = 35.sp, color = Color.Red)
        Spacer(modifier = Modifier.height(45.dp))
        //name
        OutlinedTextField(
            value = name, onValueChange = {name=it},
            label ={Text("Enter user name")},
            modifier = Modifier.fillMaxWidth()
        )
        Spacer(modifier = Modifier.height(45.dp))
        //phone no
        OutlinedTextField(
            value = phonenum, onValueChange = {phonenum=it},
            label ={Text("Enter phno")},
            modifier = Modifier.fillMaxWidth()
        )
        Spacer(modifier = Modifier.height(45.dp))
        Button(onClick = {
            scope.launch(Dispatchers.IO){
                userdao.insert(User(username =name,
                    userPhone=phonenum))
            }
            Toast.makeText(context,"Inserted successfully",
                Toast.LENGTH_LONG).show()
        }) {
            Text("Insert Now")
        }
    }
}
