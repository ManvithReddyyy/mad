TASK-7.1
1.
//in dependencies add
implementation("androidx.navigation:navigation-compose:2.9.3")
2.
package com.example.task_71

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Button
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import com.example.task_71.ui.theme.Task71Theme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            AppNavigation()
        }
    }
}

@Composable
fun AppNavigation(){
    val navController= rememberNavController()
    Scaffold {
            innerPadding->
        NavHost(navController=navController,
            startDestination="home",
            modifier= Modifier.fillMaxSize().padding(innerPadding))
            {
            composable("home") { PartA(navController) }
            composable("word") { PartB(navController) }
            }
    }
}

@Composable
fun PartA(navController: NavHostController){
    Column(
        modifier = Modifier.fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ){
        Text("WORD APP", fontSize = 22.sp)
        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick ={navController.navigate("word")}) {
            Text("Click me")
        }

    }
}

@Composable
fun PartB(navController: NavHostController){
    val words =listOf("Compose","Kotlin","Dictionary","Android","Navigation")
    Column(
        modifier = Modifier.fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
    ){
        Text("Words list", fontSize = 22.sp, modifier = Modifier.padding(16.dp))
        LazyColumn(modifier = Modifier.weight(1f)) {
            items(words){
                    word ->
                Text(
                    text = word,
                    fontSize = 20.sp,
                    modifier = Modifier.padding(8.dp)
                )
            }
        }
        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick = {navController.popBackStack()},
            modifier = Modifier.padding(16.dp)) {
            Text("Back to home")
        }
    }
}
-------------
Step 1: add dependencies in build.gradle.kts
implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.8.5")
implementation("androidx.compose.runtime:runtime-livedata")


-----------------------------------
Step 2:IncrementCounterApp.kt

package com.example.myapplication

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel

class IncrementCounterApp: ViewModel() {
    private var __counter  = MutableLiveData(0)
    var count : LiveData<Int> = __counter
    fun increment() {
        _counter.value = (_counter.value?:0) +1
    }
}
----------------------------

Step 3: MainActivity.kt
package com.example.myapplication

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Button
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.livedata.observeAsState
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewmodel.compose.viewModel
import com.example.myapplication.ui.theme.MyApplicationTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            Increment()

        }
    }
}

@Composable
fun Increment() {
   val c: IncrementCounterApp= viewModel()
    val counter by c.count.observeAsState()
     Column (modifier = Modifier.fillMaxSize()
         .padding(32.dp),
         verticalArrangement = Arrangement.Center,
         horizontalAlignment = Alignment.CenterHorizontally)
     {
         Text(text="count:$counter", fontSize = 48.sp, color = Color.Red)
         Spacer(modifier = Modifier.height(24.dp))
         Button(onClick = {c.increment()}) {
             Text(text = "Increment")
         }
     }
}
